name: Build and Release

on:
  push:
    tags:
      - "v*" # Trigger on version tags

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [windows-latest]
        include:
          # - os: ubuntu-latest
          #   artifact_name: starview
          #   asset_name: starview-linux
          #   android_build_tools_url: "https://dl.google.com/android/repository/build-tools_r34-linux.zip"
          - os: windows-latest
            artifact_name: starview.exe
            asset_name: starview-windows
            android_build_tools_url: "https://dl.google.com/android/repository/build-tools_r34-windows.zip"
            ffdec_url: "https://github.com/jindrapetrik/jpexs-decompiler/releases/download/version24.0.1/ffdec_24.0.1.zip"

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Move binary
        shell: bash
        run: |
          mkdir -p ${{ matrix.asset_name }}
          mv target/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}/${{ matrix.artifact_name }}

      - name: Copy files to release folder
        shell: bash
        run: |
          mkdir ${{ matrix.asset_name }}/patches
          cp -r patches/* ${{ matrix.asset_name }}/patches

          cp wf.keystore ${{ matrix.asset_name }}/wf.keystore

      - name: Download and extract android build tools
        shell: bash
        run: |
          mkdir -p ${{ matrix.asset_name }}/build-tools

          curl -L "${{ matrix.android_build_tools_url }}" -o build-tools.zip
          7z x build-tools.zip -o${{ matrix.asset_name }}/build-tools

      - name: Download and extract FFDec
        shell: bash
        run: |
          mkdir -p ${{ matrix.asset_name }}/ffdec

          curl -L "${{ matrix.ffdec_url }}" -o ffdec.zip
          7z x ffdec.zip -o${{ matrix.asset_name }}/ffdec

      - name : Zip release folder
        shell: bash
        run: |
          7z a -r ${{ matrix.asset_name }}.zip ${{ matrix.asset_name }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ matrix.asset_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}